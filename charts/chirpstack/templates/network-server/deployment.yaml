{{- if .Values.networkserver.enabled -}}
{{- if not .Values.networkserver.postgres.existingSecret -}}
{{- fail "networkserver: You must set a postgres secret" -}}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "chirpstack.networkserver.fullname" . }}
  labels:
{{ include "chirpstack.networkserver.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.networkserver.replicas }}
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
{{ include "chirpstack.networkserver.selector" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "chirpstack.networkserver.selector" . | indent 8 }}
    spec:
      containers:
      - image: {{ printf "%s:%s" .Values.networkserver.image.repository .Values.networkserver.image.tag }}
        name: {{ template "chirpstack.networkserver.fullname" . }}
        env:
        - name: POSTGRESQL__HOST
          value: 
        - name: POSTGRESQL__USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.networkserver.postgres.existingSecret }}
              key: username
        - name: POSTGRESQL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.networkserver.postgres.existingSecret }}
              key: password
        - name: POSTGRESQL__DSN
          value: {{ template "chirpstack.networkserver.postgres.dsn" . }}
        # - name: REDIS__SERVERS
        #   value: {{ printf "'[%s]'" (join "," .Values.networkserver.redis.servers )}}
        - name: REDIS__URL
          value: {{ .Values.networkserver.redis.url }}
        - name: REDIS__PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ default "secret.not.set" .Values.networkserver.redis.existingSecret }} 
              key: password   
              optional: true        
        - name: JOIN_SERVER__DEFAULT__SERVER
          value: {{ template "chirpstack.join.default.server" . }}
        - name: MONITORING__BIND
          value: "0.0.0.0:8090"
        - name: MONITORING__HEALTHCHECK_ENDPOINT
          value: "true"
{{ include "chirpstack.networkserver.backend" . | indent 8 }}
        ports:
        - containerPort: 8000
          protocol: TCP
          name: api-port
        - containerPort: 8090
          protocol: TCP
          name: monitoring
        livenessProbe:
          httpGet:
            path: /health
            port: monitoring
          failureThreshold: 5
          periodSeconds: 60
        startupProbe:
          httpGet:
            path: /health
            port: monitoring
          failureThreshold: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: monitoring
          failureThreshold: 3
          periodSeconds: 20
        resources: {}
        volumeMounts: []
      restartPolicy: Always
      volumes: []
{{- end -}}
